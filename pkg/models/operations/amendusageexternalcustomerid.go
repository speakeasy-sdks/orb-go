// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type AmendUsageExternalCustomerIDRequestBodyEvents struct {
	// A name to meaningfully identify the action or event type.
	EventName string `json:"event_name"`
	// A dictionary of custom properties. Values in this dictionary must be numeric, boolean, or strings. Nested dictionaries are disallowed.
	Properties map[string]interface{} `json:"properties"`
	// An ISO 8601 format date with no timezone offset (i.e. UTC). This should represent the time that usage was recorded, and is particularly important to attribute usage to a given billing period.
	Timestamp string `json:"timestamp"`
}

type AmendUsageExternalCustomerIDRequestBody struct {
	Events []AmendUsageExternalCustomerIDRequestBodyEvents `json:"events"`
}

type AmendUsageExternalCustomerIDRequest struct {
	RequestBody        *AmendUsageExternalCustomerIDRequestBody `request:"mediaType=application/json"`
	ExternalCustomerID string                                   `pathParam:"style=simple,explode=false,name=external_customer_id"`
	// This bound is exclusive (i.e. events before this timestamp will be updated)
	TimeframeEnd time.Time `queryParam:"style=form,explode=true,name=timeframe_end"`
	// This bound is inclusive (i.e. events with this timestamp onward, inclusive will be updated)
	TimeframeStart time.Time `queryParam:"style=form,explode=true,name=timeframe_start"`
}

type AmendUsageExternalCustomerID400ApplicationJSONValidationErrors struct {
	IdempotencyKey *string `json:"idempotency_key,omitempty"`
	// An array of strings corresponding to each validation failure
	ValidationErrors []string `json:"validation_errors,omitempty"`
}

// AmendUsageExternalCustomerID400ApplicationJSON - Bad Request
type AmendUsageExternalCustomerID400ApplicationJSON struct {
	// HTTP Code
	Status int64 `json:"status"`
	// Error message
	Title string `json:"title"`
	Type  string `json:"type"`
	// Contains all failing validation events.
	ValidationErrors []AmendUsageExternalCustomerID400ApplicationJSONValidationErrors `json:"validation_errors"`
}

// AmendUsageExternalCustomerID200ApplicationJSON - OK
type AmendUsageExternalCustomerID200ApplicationJSON struct {
	// An array of strings, corresponding to idempotency_key's marked as duplicates (previously ingested)
	Duplicate []map[string]interface{} `json:"duplicate,omitempty"`
	// An array of strings, corresponding to idempotency_key's which were successfully ingested.
	Ingested []string `json:"ingested,omitempty"`
}

type AmendUsageExternalCustomerIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	AmendUsageExternalCustomerID200ApplicationJSONObject *AmendUsageExternalCustomerID200ApplicationJSON
	// Bad Request
	AmendUsageExternalCustomerID400ApplicationJSONObject *AmendUsageExternalCustomerID400ApplicationJSON
}
