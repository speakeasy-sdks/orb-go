// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Orb/pkg/models/shared"
	"encoding/json"
	"fmt"
	"net/http"
)

// UpdateCustomerRequestBodyMetadata - User-specified key value pairs, often useful for referencing internal resources or IDs. Returned as-is in the customer resource.
type UpdateCustomerRequestBodyMetadata struct {
}

// UpdateCustomerRequestBodyPaymentProvider - This is used for creating charges or invoices in an external system via Orb. When not in test mode:
// - the connection must first be configured in the Orb webapp.
// - if the provider is an invoicing provider (`stripe_invoice`, `quickbooks`, `bill.com`), any product mappings must first be configured with the Orb team.
type UpdateCustomerRequestBodyPaymentProvider string

const (
	UpdateCustomerRequestBodyPaymentProviderStripeInvoice UpdateCustomerRequestBodyPaymentProvider = "stripe_invoice"
	UpdateCustomerRequestBodyPaymentProviderQuickbooks    UpdateCustomerRequestBodyPaymentProvider = "quickbooks"
	UpdateCustomerRequestBodyPaymentProviderBillCom       UpdateCustomerRequestBodyPaymentProvider = "bill.com"
	UpdateCustomerRequestBodyPaymentProviderStripeCharge  UpdateCustomerRequestBodyPaymentProvider = "stripe_charge"
	UpdateCustomerRequestBodyPaymentProviderNull          UpdateCustomerRequestBodyPaymentProvider = "null"
)

func (e UpdateCustomerRequestBodyPaymentProvider) ToPointer() *UpdateCustomerRequestBodyPaymentProvider {
	return &e
}

func (e *UpdateCustomerRequestBodyPaymentProvider) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stripe_invoice":
		fallthrough
	case "quickbooks":
		fallthrough
	case "bill.com":
		fallthrough
	case "stripe_charge":
		fallthrough
	case "null":
		*e = UpdateCustomerRequestBodyPaymentProvider(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCustomerRequestBodyPaymentProvider: %v", v)
	}
}

// UpdateCustomerRequestBody - The external payments or invoicing solution connected to this customer.
type UpdateCustomerRequestBody struct {
	// Auto collection behavior determines whether the payment method will automatically be charged for issued invoices. This field cannot be updated to `True` if the customer does not have a payment provider linked.
	AutoCollection *bool `json:"auto_collection,omitempty"`
	// The customer's billing address; all fields in the address are optional. This address appears on customer invoices.
	BillingAddress *shared.BillingAddress `json:"billing_address,omitempty"`
	// A valid customer email, to be used for invoicing and notifications.
	Email *string `json:"email,omitempty"`
	// Determines whether Orb will send automated emails to this customer. This setting is superseded by the account-wide email setting for email delivery.
	EmailDelivery *bool `json:"email_delivery,omitempty"`
	// User-specified key value pairs, often useful for referencing internal resources or IDs. Returned as-is in the customer resource.
	Metadata *UpdateCustomerRequestBodyMetadata `json:"metadata,omitempty"`
	Name     *string                            `json:"name,omitempty"`
	// This is used for creating charges or invoices in an external system via Orb. When not in test mode:
	// - the connection must first be configured in the Orb webapp.
	// - if the provider is an invoicing provider (`stripe_invoice`, `quickbooks`, `bill.com`), any product mappings must first be configured with the Orb team.
	PaymentProvider *UpdateCustomerRequestBodyPaymentProvider `json:"payment_provider,omitempty"`
	// The ID of this customer in an external payments solution, such as Stripe. This is used for creating charges or invoices in the external system via Orb.
	PaymentProviderID *string `json:"payment_provider_id,omitempty"`
	// The customer's shipping address; all fields in the address are optional. Note that downstream tax calculations are based on the shipping address.
	ShippingAddress *shared.ShippingAddress `json:"shipping_address,omitempty"`
	// Tax IDs are commonly required to be displayed on customer invoices, which are added to the headers of invoices.
	//
	//
	// ### Supported Tax ID Countries and Types
	//
	//
	// | Country        | Type         | Description                                 |
	// |----------------|--------------|---------------------------------------------|
	// | Australia      | `au_abn`     | Australian Business Number (AU ABN)	        |
	// | Australia      | `au_arn`     | Australian Taxation Office Reference Number |
	// | Austria        | `eu_vat`     | European VAT number                         |
	// | Belgium        | `eu_vat`     | European VAT number                         |
	// | Brazil         | `br_cnpj`    | Brazilian CNPJ number                       |
	// | Brazil         | `br_cpf`     | Brazilian CPF number	                       |
	// | Bulgaria       | `bg_uic`     | Bulgaria Unified Identification Code        |
	// | Bulgaria       | `eu_vat`     | European VAT number                         |
	// | Canada         | `ca_bn`      | Canadian BN                                 |
	// | Canada         | `ca_gst_hst` | Canadian GST/HST number                     |
	// | Canada         | `ca_pst_bc`  | Canadian PST number (British Columbia)      |
	// | Canada         | `ca_pst_mb`  | Canadian PST number (Manitoba)              |
	// | Canada         | `ca_pst_sk`  | Canadian PST number (Saskatchewan)          |
	// | Canada         | `ca_qst`     | Canadian QST number (Québec)                |
	// | Chile          | `cl_tin`     | Chilean TIN                                 |
	// | Croatia        | `eu_vat`     | European VAT number                         |
	// | Cyprus         | `eu_vat`     | European VAT number                         |
	// | Czech Republic | `eu_vat`     | European VAT number                         |
	// | Denmark        | `eu_vat`     | European VAT number                         |
	// | Egypt          | `eg_tin`     | Egyptian Tax Identification Number	         |
	// | Estonia   | `eu_vat`     | European VAT number   |
	// | EU        | `eu_oss_vat` | European One Stop Shop VAT number for non-Union scheme                                                   |
	// | Finland   | `eu_vat`     | European VAT number                                                                                      |
	// | France    | `eu_vat`     | European VAT number                                                                                      |
	// | Georgia   | `ge_vat`     | Georgian VAT                                                                                             |
	// | Germany   | `eu_vat`     | European VAT number                                                                                      |
	// | Greece    | `eu_vat`     | European VAT number                                                                                      |
	// | Hong Kong | `hk_br`      | Hong Kong BR number                                                                                      |
	// | Hungary   | `eu_vat`     | European VAT number                                                                                      |
	// | Hungary   | `hu_tin`     | Hungary tax number (adószám)	                                                                            |
	// | Iceland   | `is_vat`     | Icelandic VAT                                                                                            |
	// | India     | `in_gst`     | Indian GST number                                                                                        |
	// | Indonesia | `id_npwp`    | Indonesian NPWP number                                                                                   |
	// | Ireland   | `eu_vat`     | European VAT number                                                                                      |
	// | Israel    | `il_vat`     | Israel VAT                                                                                               |
	// | Italy     | `eu_vat`     | European VAT number                                                                                      |
	// | Japan     | `jp_cn`      | Japanese Corporate Number (*Hōjin Bangō*)                                                                |
	// | Japan     | `jp_rn`      | Japanese Registered Foreign Businesses' Registration Number (*Tōroku Kokugai Jigyōsha no Tōroku Bangō*)	 |
	// | Japan     | `jp_trn`     | Japanese Tax Registration Number (*Tōroku Bangō*)	                                                       |
	// | Kenya     | `ke_pin`     | Kenya Revenue Authority Personal Identification Number                                                   |
	// | Latvia    | `eu_vat`     | European VAT number                                                                                  |
	// | Liechtenstein | `li_uid`  | Liechtensteinian UID number           |
	// | Lithuania     | `eu_vat`  | European VAT number	                  |
	// | Luxembourg    | `eu_vat`  | European VAT number	                  |
	// | Malaysia      | `my_frp`  | Malaysian FRP number                  |
	// | Malaysia      | `my_itn`  | Malaysian ITN                         |
	// | Malaysia      | `my_sst`  | Malaysian SST number                  |
	// | Malta         | `eu_vat ` | European VAT number                   |
	// | Mexico        | `mx_rfc`  | Mexican RFC number                    |
	// | Netherlands   | `eu_vat`  | European VAT number	                  |
	// | New Zealand   | `nz_gst`  | New Zealand GST number	               |
	// | Norway        | `no_vat`  | Norwegian VAT number                  |
	// | Philippines   | `ph_tin	` | Philippines Tax Identification Number |
	// | Poland        | `eu_vat`  | European VAT number                   |
	// | Portugal      | `eu_vat`  | European VAT number                   |
	// | Romania       | `eu_vat`  | European VAT number                   |
	// | Russia        | `ru_inn`  | Russian INN                           |
	// | Russia        | `ru_kpp`  | Russian KPP                           |
	// | Saudi Arabia  | `sg_gst`  | Singaporean GST                       |
	// | Singapore     | `sg_uen`  | Singaporean UEN	                      |
	// | Slovakia      | `eu_vat`  | European VAT number                   |
	// | Slovenia      | `eu_vat`  | European VAT number                   |
	// | Slovenia             | `si_tin` | Slovenia tax number (davčna številka)	             |
	// | South Africa	        | `za_vat` | South African VAT number                           |
	// | South Korea          | `kr_brn` | Korean BRN                                         |
	// | Spain                | `es_cif` | Spanish NIF number (previously Spanish CIF number) |
	// | Spain                | `eu_vat` | European VAT number	                               |
	// | Sweden               | `eu_vat` | European VAT number                                |
	// | Switzerland          | `ch_vat` | Switzerland VAT number	                            |
	// | Taiwan               | `tw_vat` | Taiwanese VAT	                                     |
	// | Thailand             | `th_vat` | Thai VAT                                           |
	// | Turkey               | `tr_tin` | Turkish Tax Identification Number                  |
	// | Ukraine              | `ua_vat` | Ukrainian VAT                                      |
	// | United Arab Emirates | `ae_trn` | United Arab Emirates TRN	                          |
	// | United Kingdom       | `eu_vat` | Northern Ireland VAT number                        |
	// | United Kingdom       | `gb_vat` | United Kingdom VAT number                          |
	// | United States        | `us_ein` | United States EIN                                  |
	//
	//
	TaxID *shared.CustomerTaxID `json:"tax_id,omitempty"`
}

type UpdateCustomerRequest struct {
	RequestBody *UpdateCustomerRequestBody `request:"mediaType=application/json"`
	// Orb customer ID
	CustomerID string `pathParam:"style=simple,explode=false,name=customer_id"`
}

type UpdateCustomerResponse struct {
	ContentType string
	// OK
	Customer    *shared.Customer
	StatusCode  int
	RawResponse *http.Response
}
