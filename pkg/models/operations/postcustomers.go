// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Orb/pkg/models/shared"
	"encoding/json"
	"fmt"
	"net/http"
)

// PostCustomersRequestBodyBillingAddress - The customer's billing address; all fields in the address are optional. This address appears on customer invoices.
type PostCustomersRequestBodyBillingAddress struct {
	City *string `json:"city,omitempty"`
	// Two-letter country code (ISO 3166-1 alpha-2).
	Country *string `json:"country,omitempty"`
	Line1   *string `json:"line1,omitempty"`
	Line2   *string `json:"line2,omitempty"`
	// ZIP or postal code
	PostalCode *string `json:"postal_code,omitempty"`
	State      *string `json:"state,omitempty"`
}

// PostCustomersRequestBodyPaymentProviderEnum - This is used for creating charges or invoices in an external system via Orb. When not in test mode:
// - the connection must first be configured in the Orb webapp.
// - if the provider is an invoicing provider (`stripe_invoice`, `quickbooks`, `bill.com`), any product mappings must first be configured with the Orb team.
type PostCustomersRequestBodyPaymentProviderEnum string

const (
	PostCustomersRequestBodyPaymentProviderEnumQuickbooks    PostCustomersRequestBodyPaymentProviderEnum = "quickbooks"
	PostCustomersRequestBodyPaymentProviderEnumBillCom       PostCustomersRequestBodyPaymentProviderEnum = "bill.com"
	PostCustomersRequestBodyPaymentProviderEnumStripeCharge  PostCustomersRequestBodyPaymentProviderEnum = "stripe_charge"
	PostCustomersRequestBodyPaymentProviderEnumStripeInvoice PostCustomersRequestBodyPaymentProviderEnum = "stripe_invoice"
	PostCustomersRequestBodyPaymentProviderEnumNull          PostCustomersRequestBodyPaymentProviderEnum = "null"
)

func (e PostCustomersRequestBodyPaymentProviderEnum) ToPointer() *PostCustomersRequestBodyPaymentProviderEnum {
	return &e
}

func (e *PostCustomersRequestBodyPaymentProviderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "quickbooks":
		fallthrough
	case "bill.com":
		fallthrough
	case "stripe_charge":
		fallthrough
	case "stripe_invoice":
		fallthrough
	case "null":
		*e = PostCustomersRequestBodyPaymentProviderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostCustomersRequestBodyPaymentProviderEnum: %s", s)
	}
}

// PostCustomersRequestBodyShippingAddress - The customer's shipping address; all fields in the address are optional. Note that downstream tax calculations are based on the shipping address.
type PostCustomersRequestBodyShippingAddress struct {
	City *string `json:"city,omitempty"`
	// Two-letter country code (ISO 3166-1 alpha-2).
	Country *string `json:"country,omitempty"`
	Line1   *string `json:"line1,omitempty"`
	Line2   *string `json:"line2,omitempty"`
	// ZIP or postal code
	PostalCode *string `json:"postal_code,omitempty"`
	State      *string `json:"state,omitempty"`
}

type PostCustomersRequestBody struct {
	// The customer's billing address; all fields in the address are optional. This address appears on customer invoices.
	BillingAddress *PostCustomersRequestBodyBillingAddress `json:"billing_address,omitempty"`
	// An ISO 4217 currency string used for the customer's invoices and balance. If not set at creation time, will be set at subscription creation time.
	Currency *string `json:"currency,omitempty"`
	// A valid customer email, to be used for invoicing and notifications.
	Email string `json:"email"`
	// An optional user-defined ID for this customer resource, used throughout the system as an alias for this Customer. Use this field to identify a customer by an existing identifier in your system.
	ExternalCustomerID *string `json:"external_customer_id,omitempty"`
	// The full name of the customer
	Name string `json:"name"`
	// This is used for creating charges or invoices in an external system via Orb. When not in test mode:
	// - the connection must first be configured in the Orb webapp.
	// - if the provider is an invoicing provider (`stripe_invoice`, `quickbooks`, `bill.com`), any product mappings must first be configured with the Orb team.
	PaymentProvider *PostCustomersRequestBodyPaymentProviderEnum `json:"payment_provider,omitempty"`
	// The ID of this customer in an external payments solution, such as Stripe. This is used for creating charges or invoices in the external system via Orb.
	PaymentProviderID *string `json:"payment_provider_id,omitempty"`
	// The customer's shipping address; all fields in the address are optional. Note that downstream tax calculations are based on the shipping address.
	ShippingAddress *PostCustomersRequestBodyShippingAddress `json:"shipping_address,omitempty"`
	// A timezone identifier from the IANA timezone database, such as "America/Los_Angeles". This defaults to your account's timezone if not set. This cannot be changed after customer creation.
	Timezone *string `json:"timezone,omitempty"`
}

type PostCustomersResponse struct {
	ContentType string
	// Created
	Customer    *shared.Customer
	StatusCode  int
	RawResponse *http.Response
}
