// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Orb/pkg/models/shared"
	"net/http"
)

type SearchEventsRequestBody struct {
	// This is an explicit array of IDs to filter by. Note that an event's ID is the idempotency_key that was originally used for ingestion. Values in this array will be treated case sensitively.
	EventIds []string `json:"event_ids,omitempty"`
	// This is an issued Orb invoice ID (see also List Invoices). Orb will fetch all events that were used to calculate the invoice. In the common case, this will be a list of events whose timestamp property falls within the billing period specified by the invoice.
	InvoiceID *string `json:"invoice_id,omitempty"`
}

// SearchEvents200ApplicationJSON - An array of events matching the specified search_criteria. If no events match, this array will be empty.
type SearchEvents200ApplicationJSON struct {
	Data               []shared.Event             `json:"data,omitempty"`
	PaginationMetadata *shared.PaginationMetadata `json:"pagination_metadata,omitempty"`
}

type SearchEventsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	SearchEvents200ApplicationJSONObject *SearchEvents200ApplicationJSON
}
