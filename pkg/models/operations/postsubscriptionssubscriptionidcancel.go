// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"Orb/pkg/models/shared"
	"encoding/json"
	"fmt"
	"net/http"
)

// PostSubscriptionsSubscriptionIDCancelCancelOption - Determines the timing of subscription cancellation
type PostSubscriptionsSubscriptionIDCancelCancelOption string

const (
	PostSubscriptionsSubscriptionIDCancelCancelOptionEndOfSubscriptionTerm PostSubscriptionsSubscriptionIDCancelCancelOption = "end_of_subscription_term"
	PostSubscriptionsSubscriptionIDCancelCancelOptionImmediate             PostSubscriptionsSubscriptionIDCancelCancelOption = "immediate"
)

func (e PostSubscriptionsSubscriptionIDCancelCancelOption) ToPointer() *PostSubscriptionsSubscriptionIDCancelCancelOption {
	return &e
}

func (e *PostSubscriptionsSubscriptionIDCancelCancelOption) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "end_of_subscription_term":
		fallthrough
	case "immediate":
		*e = PostSubscriptionsSubscriptionIDCancelCancelOption(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSubscriptionsSubscriptionIDCancelCancelOption: %v", v)
	}
}

type PostSubscriptionsSubscriptionIDCancelRequest struct {
	// Determines the timing of subscription cancellation
	CancelOption   PostSubscriptionsSubscriptionIDCancelCancelOption `queryParam:"style=form,explode=true,name=cancel_option"`
	SubscriptionID string                                            `pathParam:"style=simple,explode=false,name=subscription_id"`
}

type PostSubscriptionsSubscriptionIDCancelResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	Subscription *shared.Subscription
}
