// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateDiscountDiscountType string

const (
	CreateDiscountDiscountTypePercentage CreateDiscountDiscountType = "percentage"
	CreateDiscountDiscountTypeUsage      CreateDiscountDiscountType = "usage"
	CreateDiscountDiscountTypeAmount     CreateDiscountDiscountType = "amount"
)

func (e CreateDiscountDiscountType) ToPointer() *CreateDiscountDiscountType {
	return &e
}

func (e *CreateDiscountDiscountType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "percentage":
		fallthrough
	case "usage":
		fallthrough
	case "amount":
		*e = CreateDiscountDiscountType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDiscountDiscountType: %v", v)
	}
}

// CreateDiscount - The subscription's override discount for this price.
type CreateDiscount struct {
	// Only allowed if discount_type is amount
	AmountDiscount *string                     `json:"amount_discount,omitempty"`
	DiscountType   *CreateDiscountDiscountType `json:"discount_type,omitempty"`
	// Only allowed if discount_type is percentage
	PercentageDiscount *string `json:"percentage_discount,omitempty"`
	// Only allowed if discount_type is usage
	UsageDiscount *string `json:"usage_discount,omitempty"`
}
