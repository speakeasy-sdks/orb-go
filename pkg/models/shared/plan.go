// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type PlanProduct struct {
	CreatedAt time.Time `json:"created_at"`
	ID        string    `json:"id"`
	Name      string    `json:"name"`
}

type PlanTrialConfigTrialPeriodUnitEnum string

const (
	PlanTrialConfigTrialPeriodUnitEnumDays PlanTrialConfigTrialPeriodUnitEnum = "days"
)

func (e PlanTrialConfigTrialPeriodUnitEnum) ToPointer() *PlanTrialConfigTrialPeriodUnitEnum {
	return &e
}

func (e *PlanTrialConfigTrialPeriodUnitEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "days":
		*e = PlanTrialConfigTrialPeriodUnitEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlanTrialConfigTrialPeriodUnitEnum: %s", s)
	}
}

type PlanTrialConfig struct {
	TrialPeriod     *float64                           `json:"trial_period,omitempty"`
	TrialPeriodUnit PlanTrialConfigTrialPeriodUnitEnum `json:"trial_period_unit"`
}

// Plan - OK
type Plan struct {
	// The parent plan id if the given plan was created by overriding one or more of the parent's prices
	BasePlanID *string   `json:"base_plan_id,omitempty"`
	CreatedAt  time.Time `json:"created_at"`
	// An ISO 4217 currency string or custom pricing unit (`credits`) for this plan's prices.
	Currency    string                 `json:"currency"`
	Description string                 `json:"description"`
	Discount    map[string]interface{} `json:"discount"`
	// An optional user-defined ID for this plan resource, used throughout the system as an alias for this Plan. Use this field to identify a plan by an existing identifier in your system.
	ExternalPlanID *string `json:"external_plan_id,omitempty"`
	ID             string  `json:"id"`
	// An ISO 4217 currency string for which this plan is billed in. Matches `currency` unless `currency` is a custom pricing unit.
	InvoicingCurrency string                 `json:"invoicing_currency"`
	Minimum           map[string]interface{} `json:"minimum"`
	Name              string                 `json:"name"`
	PlanPhases        []PlanPhase            `json:"plan_phases,omitempty"`
	// Prices for this plan. If the plan has phases, this includes prices across all phases of the plan.
	Prices      []Price          `json:"prices"`
	Product     PlanProduct      `json:"product"`
	TrialConfig *PlanTrialConfig `json:"trial_config,omitempty"`
}
