// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CustomerBalanceTransactionAction - Describes the reason that this transaction took place.
type CustomerBalanceTransactionAction string

const (
	CustomerBalanceTransactionActionAppliedToInvoice CustomerBalanceTransactionAction = "applied_to_invoice"
	CustomerBalanceTransactionActionProratedRefund   CustomerBalanceTransactionAction = "prorated_refund"
	CustomerBalanceTransactionActionManualAdjustment CustomerBalanceTransactionAction = "manual_adjustment"
)

func (e CustomerBalanceTransactionAction) ToPointer() *CustomerBalanceTransactionAction {
	return &e
}

func (e *CustomerBalanceTransactionAction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "applied_to_invoice":
		fallthrough
	case "prorated_refund":
		fallthrough
	case "manual_adjustment":
		*e = CustomerBalanceTransactionAction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomerBalanceTransactionAction: %v", v)
	}
}

// CustomerBalanceTransactionCreditNote - The Credit note associated with this transaction. This may appear as the result of a credit note being applied to an invoice and balance is added back to the customer balance or it is being reapplied to the invoice.
type CustomerBalanceTransactionCreditNote struct {
	// The id of the Credit note
	ID string `json:"id"`
}

// CustomerBalanceTransactionInvoice - The Invoice associated with this transaction
type CustomerBalanceTransactionInvoice struct {
	// The Invoice id
	ID string `json:"id"`
}

type CustomerBalanceTransactionType string

const (
	CustomerBalanceTransactionTypeIncrement CustomerBalanceTransactionType = "increment"
	CustomerBalanceTransactionTypeDecrement CustomerBalanceTransactionType = "decrement"
)

func (e CustomerBalanceTransactionType) ToPointer() *CustomerBalanceTransactionType {
	return &e
}

func (e *CustomerBalanceTransactionType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "increment":
		fallthrough
	case "decrement":
		*e = CustomerBalanceTransactionType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomerBalanceTransactionType: %v", v)
	}
}

// CustomerBalanceTransaction - A single change to the customer balance. All amounts are in the customer's currency.
type CustomerBalanceTransaction struct {
	// Describes the reason that this transaction took place.
	Action CustomerBalanceTransactionAction `json:"action"`
	// The value of the amount changed in the transaction.
	Amount string `json:"amount"`
	// The creation time of this transaction.
	CreatedAt time.Time `json:"created_at"`
	// The Credit note associated with this transaction. This may appear as the result of a credit note being applied to an invoice and balance is added back to the customer balance or it is being reapplied to the invoice.
	CreditNote *CustomerBalanceTransactionCreditNote `json:"credit_note,omitempty"`
	// An optional description provided for manual customer balance adjustments.
	Description string `json:"description"`
	// The new value of the customer's balance prior to the transaction, in the customer's currency.
	EndingBalance string `json:"ending_balance"`
	// A unique id for this transaction.
	ID string `json:"id"`
	// The Invoice associated with this transaction
	Invoice CustomerBalanceTransactionInvoice `json:"invoice"`
	// The original value of the customer's balance prior to the transaction, in the customer's currency.
	StartingBalance string                         `json:"starting_balance"`
	Type            CustomerBalanceTransactionType `json:"type"`
}
